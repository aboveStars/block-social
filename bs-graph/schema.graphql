type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CommentMinted @entity(immutable: true) {
  id: Bytes!
  commentToTokenId: BigInt! # uint256
  from: Bytes! # address
  commentTokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Liked @entity(immutable: true) {
  id: Bytes!
  whoDidLike: Bytes! # address
  whichPostLiked: BigInt! # uint256
  overallLikeCountOfPost: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PostMinted @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  tokenId: BigInt! # uint256
  postNumber: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UnLiked @entity(immutable: true) {
  id: Bytes!
  whoDidUnLike: Bytes! # address
  whichPostUnLiked: BigInt! # uint256
  overallLikeCountOfPost: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
